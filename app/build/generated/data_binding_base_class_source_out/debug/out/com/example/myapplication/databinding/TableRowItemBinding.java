// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TableRowItemBinding implements ViewBinding {
  @NonNull
  private final TableRow rootView;

  @NonNull
  public final TextView menuNameTextView;

  @NonNull
  public final TextView menuPriceTextView;

  @NonNull
  public final TextView menuQuantityTextView;

  @NonNull
  public final TextView menuTotalAmountTextView;

  private TableRowItemBinding(@NonNull TableRow rootView, @NonNull TextView menuNameTextView,
      @NonNull TextView menuPriceTextView, @NonNull TextView menuQuantityTextView,
      @NonNull TextView menuTotalAmountTextView) {
    this.rootView = rootView;
    this.menuNameTextView = menuNameTextView;
    this.menuPriceTextView = menuPriceTextView;
    this.menuQuantityTextView = menuQuantityTextView;
    this.menuTotalAmountTextView = menuTotalAmountTextView;
  }

  @Override
  @NonNull
  public TableRow getRoot() {
    return rootView;
  }

  @NonNull
  public static TableRowItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TableRowItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.table_row_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TableRowItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.menuNameTextView;
      TextView menuNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (menuNameTextView == null) {
        break missingId;
      }

      id = R.id.menuPriceTextView;
      TextView menuPriceTextView = ViewBindings.findChildViewById(rootView, id);
      if (menuPriceTextView == null) {
        break missingId;
      }

      id = R.id.menuQuantityTextView;
      TextView menuQuantityTextView = ViewBindings.findChildViewById(rootView, id);
      if (menuQuantityTextView == null) {
        break missingId;
      }

      id = R.id.menuTotalAmountTextView;
      TextView menuTotalAmountTextView = ViewBindings.findChildViewById(rootView, id);
      if (menuTotalAmountTextView == null) {
        break missingId;
      }

      return new TableRowItemBinding((TableRow) rootView, menuNameTextView, menuPriceTextView,
          menuQuantityTextView, menuTotalAmountTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
